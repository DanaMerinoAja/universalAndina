---
import { getCollection } from 'astro:content';
import Layout from '@layouts/Layout.astro';
import { Image } from 'astro:assets';

export async function getStaticPaths() {
  const posts = await getCollection('blog');
  return posts.map(post => ({
    params: { slug: post.slug },
    props: { post },
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();

// Use SEO data from frontmatter if available, fallback to regular post data
const seoTitle = post.data.seo?.title || post.data.title;
const seoDescription = post.data.seo?.description || post.data.excerpt;

// For SEO image, use the seo.image if provided, otherwise use the featured image
// The Layout component expects a string for the image, so we need to handle that
let seoImage: string | undefined = post.data.seo?.image;

// If seoImage is provided but not an absolute URL, make it absolute
if (seoImage && !seoImage.startsWith('http')) {
  const siteUrl = import.meta.env.SITE || 'https://titan-core.vercel.app';
  seoImage = new URL(seoImage.startsWith('/') ? seoImage : `/${seoImage}`, siteUrl).toString();
}
// If no SEO image is specified but we have a featured image, use its URL
else if (!seoImage && post.data.featuredImage) {
  // For Astro image objects, we need to create an absolute URL
  const siteUrl = import.meta.env.SITE || 'https://titan-core.vercel.app';
  seoImage = new URL(post.data.featuredImage.src, siteUrl).toString();
}
---

<Layout 
  title={seoTitle}
  description={seoDescription}
  image={seoImage}
>

  <div class="w-full h-16 absolute top-0 left-0 z-0 overflow-hidden bg-primary"></div>
  
  <article class="site-container--small mx-auto prose relative z-10 pb-base">

    <div class="mt-25 text-center md:text-left text-black items-center">
      <h1 >{post.data.title}</h1>
    </div>

    <div class="md:flex md:flex-row min-h-120">
      {post.data.featuredImage && (
        <Image 
          src={post.data.featuredImage} 
          alt={post.data.title}
          width={1500}
          height={900}
          class="rounded-lg border mb-12 border-black h-[300px] w-[600px] object-fill" 
          quality={80}
          format="webp"
        />
      )}

      <div class="mt-12 md:mt-0 pl-10 pr-10">
        <Content />
      </div>
    </div>
    
  </article>
</Layout>
